name: deploy-conda

on:
    push:
        branches:
            - main
    release:
        types: [published]

jobs:
    build_conda:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install conda, conda-build, and conda-client
              run: |
                  wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
                  bash miniconda.sh -b -p $HOME/miniconda
                  export PATH="$HOME/miniconda/bin:$PATH"
                  hash -r
                  conda config --set always_yes yes --set changeps1 no
                  conda update -q conda
                  conda install conda-build
                  conda install anaconda-client

            - name: Build package
              run: |
                  export PATH="$HOME/miniconda/bin:$PATH"
                  conda-build --output-folder . .
              env:
                  CYTHON_BUILD_IN_SOURCE: 'true'  # see setup.py. Avoids a bug when building with multiple python variants

            - name: Convert linux builds to mac and winsows
              run: |
                  export PATH="$HOME/miniconda/bin:$PATH"
                  conda convert -f -p osx-64 linux-64/*.tar.bz2
                  conda convert -f -p win-64 linux-64/*.tar.bz2

            - name: Upload to Anaconda Cloud
              run: |
                  export PATH="$HOME/miniconda/bin:$PATH"
                  anaconda upload --force --label main linux-64/*.tar.bz2
                  anaconda upload --force --label main osx-64/*.tar.bz2
                  anaconda upload --force --label main win-64/*.tar.bz2
              env:
                  ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

    test_conda:
        needs: [build_conda]
        name: Test on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-update-conda: true

        # steps:
        #     - name: Download conda in Linux
        #       if: runner.os == 'linux'
        #       run: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        #
        #     - name: Download conda in macOS
        #       if: runner.os == 'macos'
        #       run: curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o miniconda.sh
        #
        #     - name: Download conda in Windows
        #       if: runner.os == 'Windows'
        #       run: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe -O miniconda.sh
        #
        #     - name: Install conda
        #       run: |
        #           sh miniconda.sh -b -p $HOME/miniconda
        #           export PATH="$HOME/miniconda/bin:$PATH"
        #           hash -r
        #           conda config --set always_yes yes --set changeps1 no
        #           conda update -q conda

            - name: Checkout
              uses: actions/checkout@v2

            - name: Test (in Unix)
              if: runner.os != 'Windows'
              run: |
                  mkdir ~/tmp
                  cp -r tests/ examples ~/tmp
                  cd ~/tmp
                  # export PATH="$HOME/miniconda/bin:$PATH"
                  source $(conda info --root)/etc/profile.d/conda.sh
                  
                  PythonVersions="2.7 3.6 3.7 3.8 3.9"
                  for PythonVersion in $PythonVersions
                  do
                      conda create --name env-${PythonVersion} -c s-ameli python=${PythonVersion} traceinv pytest -y
                      conda activate env-${PythonVersion}
                      pytest
                      conda deactivate
                      conda remove --name env-${PythonVersion} --all -y
                  done

            - name: Test (in Windows)
              if: runner.os == 'Windows'
              run: |
                  mkdir ~\tmp
                  Copy-Item -Path tests -Destination ~\tmp -Recurse
                  Copy-Item -Path examples -Destination ~\tmp -Recurse
                  cd ~\tmp
                  $RootDir=$(conda info --root)
                  . $RootDir\etc\profile.d\conda.sh
                  $PythonVersions="2.7","3.6","3.7","3.8","3.9"
                  foreach ($PythonVersion in $PythonVersions)
                  {
                      conda create --name env-$PythonVersion -c s-ameli python=$PythonVersion pytest -y
                      conda activate env-$PythonVersion
                      conda install -c s-ameli traceinv -y
                      pytest
                      conda deactivate
                      conda remove --name env-$PythonVersion --all -y
                  }
