name: deploy-pypi3

on:
    push:
        branches:
            - main

jobs:
    build_wheels:
    runs-on: ubuntu-latest
    env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
        - name: Checkout
          uses: actions/checkout@v2

      - name: build and repair manylinux wheels
        run: |
            pwd
            ls
            docker run -i -t -v `pwd`:/io quay.io/pypa/manylinux1_x86_64 /bin/bash /io/.github/build_wheel.sh
            ls dist
            ls dist/wheelhouse

        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
              path: ./wheelhouse/*.whl

    build_sdist:
        name: Build source distribution
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install Python
              uses: actions/setup-python@v2
            
            - name: Build sdist
              run: python setup.py sdist
            
            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                  path: dist/*.tar.gz

    upload_pypi:
        needs: [build_wheels, build_sdist]
        runs-on: ubuntu-latest
        name: Publish to PyPi
        
        # upload to PyPI on every tag starting with 'v'
        # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        # alternatively, to publish when a GitHub Release is created, use the following rule:
        # if: github.event_name == 'release' && github.event.action == 'published'
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v2
              with:
                  name: artifact
                  path: dist
            
            - name: Upload to PyPi
              uses: pypa/gh-action-pypi-publish@master
              with:
                  verbose: true
                  user: __token__
                  password: ${{ secrets.pypi_password }}
